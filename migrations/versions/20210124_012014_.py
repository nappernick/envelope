"""empty message

Revision ID: 26cae0588639
Revises: 
Create Date: 2021-01-24 01:20:14.782725

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '26cae0588639'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_set_name', sa.String(length=100), nullable=False),
    sa.Column('data_set', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_sets_created_at'), 'data_sets', ['created_at'], unique=False)
    op.create_index(op.f('ix_data_sets_data_set_name'), 'data_sets', ['data_set_name'], unique=True)
    op.create_index(op.f('ix_data_sets_id'), 'data_sets', ['id'], unique=False)
    op.create_index(op.f('ix_data_sets_updated_at'), 'data_sets', ['updated_at'], unique=False)
    op.create_table('health_areas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('health_area', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('health_area')
    )
    op.create_table('types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=40), nullable=False),
    sa.Column('last_name', sa.String(length=40), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(length=100), nullable=False),
    sa.Column('project_notes', sa.Text(), nullable=True),
    sa.Column('data_set_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_health_area_count', sa.Integer(), nullable=False),
    sa.Column('target_surv_count', sa.Integer(), nullable=False),
    sa.Column('enumerator_count', sa.Integer(), nullable=True),
    sa.Column('survey_count', sa.Integer(), nullable=True),
    sa.Column('health_area_count', sa.Integer(), nullable=True),
    sa.Column('avg_duration', sa.Float(), nullable=True),
    sa.Column('dont_know_count', sa.Integer(), nullable=True),
    sa.Column('outlier_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_set_id'], ['data_sets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_name')
    )
    op.create_table('surveys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('health_area_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('enumerator_id', sa.String(length=20), nullable=False),
    sa.Column('date_time_administered', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('respondent', sa.String(length=100), nullable=False),
    sa.Column('num_outlier_data_points', sa.Integer(), nullable=True),
    sa.Column('num_dont_know_responses', sa.Integer(), nullable=True),
    sa.Column('outside_health_zone', sa.Boolean(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('long', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['health_area_id'], ['health_areas.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_surveys_created_at'), 'surveys', ['created_at'], unique=False)
    op.create_index(op.f('ix_surveys_date_time_administered'), 'surveys', ['date_time_administered'], unique=False)
    op.create_index(op.f('ix_surveys_duration'), 'surveys', ['duration'], unique=False)
    op.create_index(op.f('ix_surveys_enumerator_id'), 'surveys', ['enumerator_id'], unique=False)
    op.create_index(op.f('ix_surveys_health_area_id'), 'surveys', ['health_area_id'], unique=False)
    op.create_index(op.f('ix_surveys_id'), 'surveys', ['id'], unique=False)
    op.create_index(op.f('ix_surveys_lat'), 'surveys', ['lat'], unique=False)
    op.create_index(op.f('ix_surveys_long'), 'surveys', ['long'], unique=False)
    op.create_index(op.f('ix_surveys_num_dont_know_responses'), 'surveys', ['num_dont_know_responses'], unique=False)
    op.create_index(op.f('ix_surveys_num_outlier_data_points'), 'surveys', ['num_outlier_data_points'], unique=False)
    op.create_index(op.f('ix_surveys_outside_health_zone'), 'surveys', ['outside_health_zone'], unique=False)
    op.create_index(op.f('ix_surveys_project_id'), 'surveys', ['project_id'], unique=False)
    op.create_index(op.f('ix_surveys_respondent'), 'surveys', ['respondent'], unique=False)
    op.create_index(op.f('ix_surveys_updated_at'), 'surveys', ['updated_at'], unique=False)
    op.create_table('survey_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('outside_2_sd', sa.Boolean(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('standard_deviation', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('survey_questions')
    op.drop_index(op.f('ix_surveys_updated_at'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_respondent'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_project_id'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_outside_health_zone'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_num_outlier_data_points'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_num_dont_know_responses'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_long'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_lat'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_id'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_health_area_id'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_enumerator_id'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_duration'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_date_time_administered'), table_name='surveys')
    op.drop_index(op.f('ix_surveys_created_at'), table_name='surveys')
    op.drop_table('surveys')
    op.drop_table('projects')
    op.drop_table('users')
    op.drop_table('types')
    op.drop_table('health_areas')
    op.drop_index(op.f('ix_data_sets_updated_at'), table_name='data_sets')
    op.drop_index(op.f('ix_data_sets_id'), table_name='data_sets')
    op.drop_index(op.f('ix_data_sets_data_set_name'), table_name='data_sets')
    op.drop_index(op.f('ix_data_sets_created_at'), table_name='data_sets')
    op.drop_table('data_sets')
    # ### end Alembic commands ###
